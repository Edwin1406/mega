{"version":3,"sources":["alertas.js","app.js","filtradorVentas.js","graficas.js","lector.js"],"names":["alertaCotizador","document","querySelector","setTimeout","remove","maquinaInput","maquinas","maquinasFiltradas","listadoMaquinas","async","url","location","origin","respuesta","fetch","resultado","json","arrayMaquinas","map","maquina","nombre","trim","id","console","log","formatearMaquinas","obtenerMaquinas","addEventListener","e","busqueda","target","value","length","expresion","RegExp","filter","toLowerCase","search","firstChild","removeChild","forEach","maquinaHTML","createElement","classList","add","textContent","dataset","appendChild","noResultado","mostrarMaquinas","filtroVentas","filtro","this","querySelectorAll","fila","cells","nombreCliente","nombreProducto","codigoProducto","estado","includes","style","display","apiUrl","chart","originalData","fetchData","response","data","gramajes","Set","item","gramaje","anchos","ancho","gramajeSelect","getElementById","option","anchoSelect","populateFilters","renderChart","renderTable","error","filterData","selectedGramaje","selectedAncho","filteredData","options","series","name","reduce","sum","parseFloat","existencia","type","height","stacked","toolbar","show","plotOptions","bar","horizontal","borderRadius","dataLabels","enabled","xaxis","categories","title","text","yaxis","legend","position","fill","opacity","updateOptions","ApexCharts","render","table","$","DataTable","clear","row","descripcion","draw","ready","language","ultimaDeteccion","mostrarNotificacion","mensaje","notificacion","Quagga","init","inputStream","constraints","facingMode","width","decoder","readers","err","start","onDetected","codigoEscaneado","codeResult","code","ahora","Date","getTime","codigo","status","ok","Error","producto","find","p","barcode","color","window","open","buscarProducto"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n\r\n    const alertaCotizador = document.querySelector('div .exito');\r\n    if(alertaCotizador) {\r\n        setTimeout(() => {\r\n            alertaCotizador.remove();\r\n        }, 3000);\r\n    }\r\n\r\n\r\n})();","(function(){\r\n    const maquinaInput = document.querySelector('#maquina_id');\r\n    if(maquinaInput){\r\n        let maquinas= [];\r\n        let maquinasFiltradas = [];\r\n\r\n        const listadoMaquinas = document.querySelector('#listado-maquinas');\r\n        obtenerMaquinas();\r\n\r\n        maquinaInput.addEventListener('input',buscarMaquinas);\r\n\r\n        async function obtenerMaquinas(){\r\n            const url = `${location.origin}/admin/api/maquinas`;;\r\n            const respuesta = await fetch(url);\r\n            resultado = await respuesta.json();\r\n            formatearMaquinas(resultado);\r\n        }\r\n\r\n\r\n        function formatearMaquinas(arrayMaquinas=[]){\r\n            maquinas = arrayMaquinas.map(maquina => {\r\n                return {\r\n                    nombre: `${maquina.nombre.trim()}`,\r\n                    id: maquina.id\r\n                }\r\n            });\r\n\r\n            console.log(maquinas);\r\n\r\n        }\r\n\r\n\r\n        function buscarMaquinas(e){\r\n           const busqueda = e.target.value;\r\n\r\n           if(busqueda.length>3){\r\n            const expresion = new RegExp(busqueda, 'i');\r\n            maquinasFiltradas = maquinas.filter(maquina =>{\r\n                if(maquina.nombre.toLowerCase().search(expresion) != -1){\r\n                    return maquina;\r\n\r\n                }\r\n            });\r\n           }else{\r\n                maquinasFiltradas = [];\r\n           }\r\n           mostrarMaquinas();\r\n        }\r\n\r\n        function mostrarMaquinas(){\r\n            while(listadoMaquinas.firstChild){\r\n                listadoMaquinas.removeChild(listadoMaquinas.firstChild);\r\n            }\r\n\r\n            if(maquinasFiltradas.length >0){\r\n                maquinasFiltradas.forEach (maquina =>{\r\n                    const maquinaHTML = document.createElement('LI');\r\n                    maquinaHTML.classList.add('listado-maquinas__maquina');\r\n                    maquinaHTML.textContent = maquina.nombre;\r\n                    maquinaHTML.dataset.id = maquina.id;\r\n    \r\n                    // anadir al html\r\n                    listadoMaquinas.appendChild(maquinaHTML);\r\n                })\r\n\r\n            }else{\r\n                const noResultado = document.createElement('P');\r\n                noResultado.classList.add('listado-maquinas__no-resultado');\r\n                noResultado.textContent = 'No hay resultados';\r\n                listadoMaquinas.appendChild(noResultado);\r\n            }\r\n\r\n\r\n\r\n          \r\n        }\r\n\r\n    }\r\n})();\r\n\r\n","document.addEventListener('DOMContentLoaded', function () {\r\n    const filtroVentas = document.querySelector('#filtros_ventas');\r\n    if (filtroVentas) {\r\n        filtroVentas.addEventListener('input', function () {\r\n            const filtro = this.value.toLowerCase();\r\n            const filas = document.querySelectorAll('#tabla .table__tr');\r\n\r\n            filas.forEach(fila => {\r\n                const id = fila.cells[0].textContent.toLowerCase();\r\n                const nombreCliente = fila.cells[1].textContent.toLowerCase();\r\n                const nombreProducto = fila.cells[2].textContent.toLowerCase();\r\n                const codigoProducto = fila.cells[3].textContent.toLowerCase();\r\n                const estado = fila.cells[4].textContent.toLowerCase();\r\n\r\n                console.log(id, nombreCliente, nombreProducto, codigoProducto, estado);\r\n\r\n                if (\r\n                    id.includes(filtro) || \r\n                    nombreCliente.includes(filtro) || \r\n                    nombreProducto.includes(filtro) || \r\n                    codigoProducto.includes(filtro) || \r\n                    estado.includes(filtro)\r\n                ) {\r\n                    fila.style.display = ''; // Mostrar fila\r\n                } else {\r\n                    fila.style.display = 'none'; // Ocultar fila\r\n                }\r\n            });\r\n        });\r\n    }\r\n});\r\n","(function(){\r\n    const apiUrl = `${location.origin}/admin/api/apicajablanco`;\r\n    let originalData = [];\r\n    let chart;\r\n\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch(apiUrl);\r\n        const data = await response.json();\r\n        originalData = data;\r\n        populateFilters(data);\r\n        renderChart(data);\r\n        renderTable(data);\r\n      } catch (error) {\r\n        console.error(\"Error al obtener los datos de la API:\", error);\r\n      }\r\n    }\r\n\r\n    function populateFilters(data) {\r\n      const gramajes = [...new Set(data.map(item => item.gramaje))];\r\n      const anchos = [...new Set(data.map(item => item.ancho))];\r\n\r\n      const gramajeSelect = document.getElementById(\"filterGramaje\");\r\n      gramajes.forEach(gramaje => {\r\n        const option = document.createElement(\"option\");\r\n        option.value = gramaje;\r\n        option.textContent = gramaje;\r\n        gramajeSelect.appendChild(option);\r\n      });\r\n\r\n      const anchoSelect = document.getElementById(\"filterAncho\");\r\n      anchos.forEach(ancho => {\r\n        const option = document.createElement(\"option\");\r\n        option.value = ancho;\r\n        option.textContent = ancho;\r\n        anchoSelect.appendChild(option);\r\n      });\r\n    }\r\n\r\n    function filterData() {\r\n      const selectedGramaje = document.getElementById(\"filterGramaje\").value;\r\n      const selectedAncho = document.getElementById(\"filterAncho\").value;\r\n\r\n      let filteredData = originalData;\r\n\r\n      if (selectedGramaje !== \"all\") {\r\n        filteredData = filteredData.filter(item => item.gramaje === selectedGramaje);\r\n      }\r\n      if (selectedAncho !== \"all\") {\r\n        filteredData = filteredData.filter(item => item.ancho === selectedAncho);\r\n      }\r\n\r\n      renderChart(filteredData);\r\n      renderTable(filteredData);\r\n    }\r\n\r\n    function renderChart(data) {\r\n      const gramajes = [...new Set(data.map(item => item.gramaje))];\r\n      const anchos = [...new Set(data.map(item => item.ancho))];\r\n\r\n      const series = anchos.map(ancho => ({\r\n        name: `Ancho : ${ancho}m`,\r\n        data: gramajes.map(gramaje => {\r\n          const items = data.filter(item => item.ancho === ancho && item.gramaje === gramaje);\r\n          return items.reduce((sum, item) => sum + parseFloat(item.existencia), 0);\r\n        }),\r\n      }));\r\n\r\n      const options = {\r\n        series: series,\r\n        chart: {\r\n          type: 'bar',\r\n          height: 400,\r\n          stacked: true,\r\n          toolbar: {\r\n            show: true,\r\n          },\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: false,\r\n            borderRadius: 4,\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        xaxis: {\r\n          categories: gramajes,\r\n          title: {\r\n            text: 'Gramajes',\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Existencias Totales',\r\n          },\r\n        },\r\n        legend: {\r\n          position: 'top',\r\n        },\r\n        fill: {\r\n          opacity: 1,\r\n        },\r\n      };\r\n\r\n      if (chart) {\r\n        chart.updateOptions(options);\r\n      } else {\r\n        chart = new ApexCharts(document.querySelector(\"#chart\"), options);\r\n        chart.render();\r\n      }\r\n    }\r\n\r\n    function renderTable(data) {\r\n      const table = $(\"#dataTable\").DataTable();\r\n      table.clear();\r\n\r\n      data.forEach(item => {\r\n        table.row.add([\r\n          item.ancho,\r\n          item.gramaje,\r\n          item.existencia,\r\n          item.descripcion,\r\n        ]);\r\n      });\r\n\r\n      table.draw();\r\n    }\r\n\r\n    document.getElementById(\"filterGramaje\").addEventListener(\"change\", filterData);\r\n    document.getElementById(\"filterAncho\").addEventListener(\"change\", filterData);\r\n\r\n    $(document).ready(() => {\r\n      $(\"#dataTable\").DataTable({\r\n        language: {\r\n          url: \"//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json\" \r\n        }\r\n      });\r\n      fetchData();\r\n    });\r\n    \r\n\r\n})();","(function(){\r\n\r\nconst apiUrl = `${location.origin}/admin/api/ApiMateriaPrima`; // URL de la API\r\nlet ultimaDeteccion = {}; // Almacena la última detección de códigos\r\nconst bloqueoTiempo = 2000; // Tiempo de espera en milisegundos\r\n\r\n// Mostrar notificación en la parte inferior\r\nfunction mostrarNotificacion(mensaje) {\r\n    const notificacion = document.getElementById(\"notificacion\");\r\n    notificacion.textContent = mensaje;\r\n    notificacion.classList.add(\"mostrar\");\r\n\r\n    // Ocultar la notificación después de 3 segundos\r\n    setTimeout(() => {\r\n        notificacion.classList.remove(\"mostrar\");\r\n    }, 3000);\r\n}\r\n\r\n// Inicializar el escáner\r\nfunction iniciarEscaner() {\r\n    Quagga.init(\r\n        {\r\n            inputStream: {\r\n                type: \"LiveStream\",\r\n                target: document.querySelector(\"#scanner\"),\r\n                constraints: {\r\n                    facingMode: \"environment\",\r\n                    width: 400,\r\n                    height: 250,\r\n                },\r\n            },\r\n            decoder: { readers: [\"code_128_reader\"] },\r\n        },\r\n        function (err) {\r\n            if (err) {\r\n                console.error(err);\r\n                return;\r\n            }\r\n            Quagga.start();\r\n        }\r\n    );\r\n\r\n    Quagga.onDetected((data) => {\r\n        const codigoEscaneado = data.codeResult.code;\r\n        const ahora = new Date().getTime();\r\n\r\n        // Verificar si el código fue detectado recientemente\r\n        if (ultimaDeteccion[codigoEscaneado] && ahora - ultimaDeteccion[codigoEscaneado] < bloqueoTiempo) {\r\n            return; // Ignorar detección duplicada\r\n        }\r\n\r\n        ultimaDeteccion[codigoEscaneado] = ahora; // Actualizar tiempo de detección\r\n        console.log(\"Código detectado:\", codigoEscaneado);\r\n        buscarProducto(codigoEscaneado);\r\n    });\r\n}\r\n\r\n// Buscar producto en la API\r\nasync function buscarProducto(codigo) {\r\n    const status = document.getElementById(\"status\");\r\n    try {\r\n        const response = await fetch(apiUrl);\r\n        if (!response.ok) throw new Error(\"Error al cargar la API\");\r\n        const productos = await response.json();\r\n\r\n        // Buscar el producto que coincide con el código de barras\r\n        const producto = productos.find((p) => p.barcode === codigo);\r\n\r\n        if (producto) {\r\n            status.textContent = `Producto ${codigo} encontrado. Redirigiendo...`;\r\n            status.style.color = \"#28a745\";\r\n\r\n            // Mostrar notificación\r\n            mostrarNotificacion(`Producto encontrado: Redirigiendo al ID ${producto.id}`);\r\n\r\n            // Redirigir a la URL con el ID del producto después de 3 segundos\r\n            setTimeout(() => {\r\n                window.open(`${location.origin}/admin/produccion/materia/editar?id=${producto.id}`, '_blank');\r\n            }, 3000);\r\n\r\n        } else {\r\n            status.textContent = `Código ${codigo} no encontrado en la base de datos.`;\r\n            status.style.color = \"#dc3545\";\r\n\r\n            // Mostrar notificación\r\n            mostrarNotificacion(`Código ${codigo} no encontrado.`);\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error al buscar el producto:\", error);\r\n        status.textContent = \"Error al buscar el producto.\";\r\n        status.style.color = \"#dc3545\";\r\n\r\n        // Mostrar notificación\r\n        mostrarNotificacion(\"Error al buscar el producto.\");\r\n    }\r\n}\r\n\r\n// Iniciar el escáner\r\niniciarEscaner();\r\n\r\n} ) ();"]}