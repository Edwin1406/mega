{"version":3,"sources":["alertas.js","app.js","cotizador.js","dist/alertas.dev.js","dist/app.dev.js","dist/cotizador.dev.js"],"names":["alertaCotizador","document","querySelector","setTimeout","remove","maquinaInput","maquinas","maquinasFiltradas","listadoMaquinas","async","url","location","origin","respuesta","fetch","resultado","json","arrayMaquinas","map","maquina","nombre","trim","id","console","log","formatearMaquinas","obtenerMaquinas","addEventListener","e","busqueda","target","value","length","expresion","RegExp","filter","toLowerCase","search","firstChild","removeChild","forEach","maquinaHTML","createElement","classList","add","textContent","dataset","appendChild","noResultado","mostrarMaquinas","pedido_id","test","apipedidos","ApiPedidos","liner_id","pedido2_id","bobinaInterna_id","bobinaIntermedia_id","bobinaExterna_id","ApiTest","apitest","ApiBobinas","apibobinas","ApiBobina_externa","apibobinasExterna","ApiBobina_media","apibobinasMedia","mostrarAlerta","titulo","mensaje","tipo","color","fondo","Swal","fire","title","text","icon","iconColor","confirmButtonText","confirmButtonColor","background","customClass","popup","sumargramaje","bobinaInterna","bobinaExterna","bobinaMedia","gramajeInterna","parseFloat","gramaje","gramajeExterna","gramajeMedia","gramajeTotal","pesoTest","peso","anchoInterno","ancho","anchoMedia","anchoExterno","verificarAnchoBobinas","getElementById","liner_interno","liner_medio","liner_externo","liner","pedido","pedido2","bobinaIntermedia","name","arguments","undefined","concat","regeneratorRuntime","_context","prev","next","awrap","sent","stop","copiaTest","copiaBobinas","copiarDatos","_context2","t0","_context3","_context4"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n\r\n    const alertaCotizador = document.querySelector('div .exito');\r\n    if(alertaCotizador) {\r\n        setTimeout(() => {\r\n            alertaCotizador.remove();\r\n        }, 3000);\r\n    }\r\n\r\n\r\n})();","(function(){\r\n    const maquinaInput = document.querySelector('#maquina_id');\r\n    if(maquinaInput){\r\n        let maquinas= [];\r\n        let maquinasFiltradas = [];\r\n\r\n        const listadoMaquinas = document.querySelector('#listado-maquinas');\r\n        obtenerMaquinas();\r\n\r\n        maquinaInput.addEventListener('input',buscarMaquinas);\r\n\r\n        async function obtenerMaquinas(){\r\n            const url = `${location.origin}/admin/api/maquinas`;;\r\n            const respuesta = await fetch(url);\r\n            resultado = await respuesta.json();\r\n            formatearMaquinas(resultado);\r\n        }\r\n\r\n\r\n        function formatearMaquinas(arrayMaquinas=[]){\r\n            maquinas = arrayMaquinas.map(maquina => {\r\n                return {\r\n                    nombre: `${maquina.nombre.trim()}`,\r\n                    id: maquina.id\r\n                }\r\n            });\r\n\r\n            console.log(maquinas);\r\n\r\n        }\r\n\r\n\r\n        function buscarMaquinas(e){\r\n           const busqueda = e.target.value;\r\n\r\n           if(busqueda.length>3){\r\n            const expresion = new RegExp(busqueda, 'i');\r\n            maquinasFiltradas = maquinas.filter(maquina =>{\r\n                if(maquina.nombre.toLowerCase().search(expresion) != -1){\r\n                    return maquina;\r\n\r\n                }\r\n            });\r\n           }else{\r\n                maquinasFiltradas = [];\r\n           }\r\n           mostrarMaquinas();\r\n        }\r\n\r\n        function mostrarMaquinas(){\r\n            while(listadoMaquinas.firstChild){\r\n                listadoMaquinas.removeChild(listadoMaquinas.firstChild);\r\n            }\r\n\r\n            if(maquinasFiltradas.length >0){\r\n                maquinasFiltradas.forEach (maquina =>{\r\n                    const maquinaHTML = document.createElement('LI');\r\n                    maquinaHTML.classList.add('listado-maquinas__maquina');\r\n                    maquinaHTML.textContent = maquina.nombre;\r\n                    maquinaHTML.dataset.id = maquina.id;\r\n    \r\n                    // anadir al html\r\n                    listadoMaquinas.appendChild(maquinaHTML);\r\n                })\r\n\r\n            }else{\r\n                const noResultado = document.createElement('P');\r\n                noResultado.classList.add('listado-maquinas__no-resultado');\r\n                noResultado.textContent = 'No hay resultados';\r\n                listadoMaquinas.appendChild(noResultado);\r\n            }\r\n\r\n\r\n\r\n          \r\n        }\r\n\r\n    }\r\n})();\r\n\r\n","(function(){\r\n    ApiPedidos();\r\n\r\n    let test ={\r\n        liner_id : '',\r\n        pedido_id : '',\r\n        pedido2_id : '',\r\n        bobinaInterna_id : '',\r\n        bobinaIntermedia_id : '',\r\n        bobinaExterna_id : ''\r\n        }\r\n    \r\n    // obtener datos del api de pedidos\r\n    async function ApiPedidos(){\r\n        const {pedido_id} = test;\r\n        console.log(pedido_id)\r\n        try {\r\n            const url = `${location.origin}/admin/api/pedidos?pedido_id=${pedido_id}`;\r\n            const resultado = await fetch(url);\r\n            const apipedidos = await resultado.json();\r\n            console.log(apipedidos);\r\n            // return apipedidos\r\n        } catch (e) {\r\n            console.log(e);\r\n                \r\n        }\r\n    } \r\n    // obtener datos del api de test\r\n    async function ApiTest(){\r\n        const {liner_id} = test;\r\n        try {\r\n            const url = `${location.origin}/admin/api/test?liner_id=${liner_id}`;\r\n            const resultado = await fetch(url);\r\n            const apitest = await resultado.json();\r\n            // copiarDatos(apitest);\r\n           console.log(apitest)\r\n           return apitest\r\n        } catch (e) {\r\n          console.log(e);\r\n            \r\n        }\r\n    \r\n    }   \r\n \r\n\r\n    // obtener datos del api de bobinas\r\n\r\n    async function ApiBobinas(){\r\n        const {bobinaInterna_id} = test;\r\n        try {\r\n            const url = `${location.origin}/admin/api/apibobinas?bobinaInterna_id=${bobinaInterna_id}`;\r\n            const resultado = await fetch(url);\r\n            const apibobinas = await resultado.json();\r\n            console.log(apibobinas);\r\n           return apibobinas\r\n           \r\n        } catch (e) {\r\n          console.log(e);\r\n            \r\n        }\r\n    \r\n    }\r\n\r\n\r\n    async function ApiBobina_externa(){\r\n        const {bobinaExterna_id} = test;\r\n        try {\r\n            const url = `${location.origin}/admin/api/apibobina_externa?bobinaExterna_id=${bobinaExterna_id}`;\r\n            const resultado = await fetch(url);\r\n            const apibobinasExterna = await resultado.json();\r\n            console.log(apibobinasExterna);\r\n            // mostrarApibobinas(apibobinas);\r\n            return apibobinasExterna\r\n           \r\n        } catch (e) {\r\n          console.log(e);\r\n            \r\n        }\r\n    \r\n    }\r\n    async function ApiBobina_media(){\r\n        const {bobinaIntermedia_id} = test;\r\n        try {\r\n            const url = `${location.origin}/admin/api/apibobina_media?bobinaIntermedia_id=${bobinaIntermedia_id}`;\r\n            const resultado = await fetch(url);\r\n            const apibobinasMedia = await resultado.json();\r\n            console.log(apibobinasMedia);\r\n            // mostrarApibobinas(apibobinas);\r\n            return apibobinasMedia\r\n           \r\n        } catch (e) {\r\n          console.log(e);\r\n            \r\n        }\r\n    \r\n    }\r\n\r\n\r\n    // FUNCION PARA MOSTRAR ALERTA \r\n\r\n    function mostrarAlerta(titulo,mensaje,tipo,color,fondo){\r\n        Swal.fire({ \r\n            title: titulo,\r\n            text: mensaje,\r\n            icon: tipo,\r\n            iconColor: color,  // Color del ícono\r\n            confirmButtonText: \"Entendido\",\r\n            confirmButtonColor: \"#3085d6\",\r\n            background: fondo, // Color de fondo del cuadro de alerta\r\n            color: \"#000000\", // Color del texto\r\n            customClass: {\r\n                popup: 'swal-wide'  // Clase CSS personalizada para ajustar el ancho\r\n            },\r\n        });\r\n       \r\n    }\r\n\r\n    // FUNCION PARA SUMAR EL GRAMAJE DE LAS BOBINAS Y COMPARAR CON EL TEST\r\n\r\n    async function sumargramaje() {\r\n       // Llamamos a cada API para obtener los datos\r\n        const bobinaInterna = await ApiBobinas();\r\n        const bobinaExterna = await ApiBobina_externa();\r\n        const bobinaMedia = await ApiBobina_media();\r\n        const test = await ApiTest();\r\n\r\n        // Convertimos el gramaje de cada bobina a número y validamos que se hayan recibido correctamente\r\n        const gramajeInterna = parseFloat(bobinaInterna.gramaje) || 0;\r\n        const gramajeExterna = parseFloat(bobinaExterna.gramaje) || 0;\r\n        const gramajeMedia = parseFloat(bobinaMedia.gramaje) || 0;\r\n\r\n        // Calculamos el gramaje total\r\n        const gramajeTotal = gramajeInterna + gramajeExterna + gramajeMedia;\r\n\r\n        // Obtenemos el peso del test para la comparación\r\n        const pesoTest = parseFloat(test.peso);\r\n\r\n        // Verificamos que todas las bobinas tengan un gramaje válido antes de comparar\r\n        if (gramajeInterna > 0 && gramajeExterna > 0 && gramajeMedia > 0) {\r\n            verificarAnchoBobinas();\r\n            if (pesoTest === gramajeTotal) {\r\n                console.log(\"Gramaje total:\", gramajeTotal);\r\n                document.getElementById(\"gramaje_total\").value = gramajeTotal;\r\n                mostrarAlerta('Gramaje correcto',`El gramaje total de las bobinas seleccionadas es: ${gramajeTotal} gr`,'success','#28a745','#d4edda');\r\n\r\n                return gramajeTotal;\r\n            } else {\r\n                \r\n                mostrarAlerta('Gramaje no coincide',`Gramaje recomendado para el test ${test.test} : Int: ${test.liner_interno}` + \"gr, Media: \" + test.liner_medio + \"gr, Externo: \" + test.liner_externo + \"gr\",'error','#ff0000','#f8d7da');\r\n\r\n                document.getElementById(\"gramaje_total\").value = \"\";\r\n                \r\n                return;\r\n            }\r\n        } else {\r\n            console.log(\"Aún no se han seleccionado todas las bobinas necesarias.\");\r\n        }\r\n\r\n    }\r\n\r\n   \r\n        async function verificarAnchoBobinas() {\r\n  \r\n            // Llamamos a cada API para obtener los datos\r\n        const bobinaInterna = await ApiBobinas();\r\n        const bobinaExterna = await ApiBobina_externa();\r\n        const bobinaMedia = await ApiBobina_media();\r\n       // Obtenemos los anchos de las bobinas\r\n        const anchoInterno = parseFloat(bobinaInterna.ancho) || 0;\r\n        const anchoMedia = parseFloat(bobinaMedia.ancho) || 0;\r\n        const anchoExterno = parseFloat(bobinaExterna.ancho) || 0;\r\n\r\n        // Verificamos que los campos de ancho no estén vacíos\r\n        if (anchoInterno && anchoMedia && anchoExterno) {\r\n            // Comprobamos si los anchos son iguales\r\n            if (anchoInterno === anchoMedia && anchoMedia === anchoExterno) {\r\n             // Mostrar la alerta después de 30 segundos\r\n                setTimeout(() => {\r\n                    mostrarAlerta('Ancho correcto', `Los anchos de las bobinas seleccionadas son iguales: ${anchoInterno} cm`, 'success', '#28a745', '#d4edda');\r\n                    \r\n                }, 4000); \r\n\r\n\r\n            } else {\r\n                setTimeout(() => {\r\n                    mostrarAlerta('Anchos incorrectos', `Los anchos de las bobinas seleccionadas no coinciden: Int: ${anchoInterno} cm, Media: ${anchoMedia} cm`,'error','#ff0000','#f8d7da');\r\n                \r\n                    // const bobinaInterna = document.querySelector('[name=\"bobinaInterna_id\"]')\r\n                    // const bobinaIntermedia = document.querySelector('[name=\"bobinaIntermedia_id\"]')\r\n                    // const bobinaExterna = document.querySelector('[name=\"bobinaExterna_id\"]')\r\n                    // bobinaInterna.value = ''\r\n                    // bobinaIntermedia.value = ''\r\n                    // bobinaExterna.value = ''\r\n                }, 4000); \r\n\r\n            }\r\n        } else {\r\n            console.log(\"Error: Los anchos internos y medios deben estar llenos\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // funcion para sumar los anchos de los peddios \r\n\r\n    async function sumarAnchosPedidos() { \r\n\r\n\r\n    }\r\n\r\n\r\n   \r\n    \r\n   \r\n\r\n \r\n\r\n    const pedidos = document.querySelector('#pedido')\r\n\r\n    if(pedidos ){\r\n    const  liner = document.querySelector('[name=\"liner_id\"]')\r\n    const pedido = document.querySelector('[name=\"pedido_id\"]')\r\n    const pedido2 = document.querySelector('[name=\"pedido2_id\"]')\r\n    const bobinaInterna = document.querySelector('[name=\"bobinaInterna_id\"]')\r\n    const bobinaIntermedia = document.querySelector('[name=\"bobinaIntermedia_id\"]')\r\n    const bobinaExterna = document.querySelector('[name=\"bobinaExterna_id\"]')\r\n\r\n    liner.addEventListener('change', busqueda)\r\n    pedido.addEventListener('change', busqueda)\r\n    pedido2.addEventListener('change', busqueda)\r\n    bobinaInterna.addEventListener('change', busqueda)\r\n    bobinaIntermedia.addEventListener('change', busqueda)\r\n    bobinaExterna.addEventListener('change', busqueda)\r\n\r\n    function busqueda (e){\r\n\r\n    // los pedidos no pueden ser iguales\r\n    if ((e.target.name === 'pedido_id' || e.target.name === 'pedido2_id') && pedido.value === pedido2.value) {\r\n        pedido2.value = ''\r\n        Swal.fire(\"Pedido ya seleccionado\", \"No puede seleccionar el mismo pedido\", \"error\");\r\n        return    \r\n\r\n    }else{\r\n        test[e.target.name] = e.target.value.trim()\r\n        console.log(test)\r\n        ApiBobinas();\r\n        ApiTest();\r\n        ApiBobina_externa();\r\n        ApiBobina_media();\r\n        sumargramaje();\r\n    }\r\n\r\n}\r\n    }\r\n\r\n\r\n})();","\"use strict\";\n\n(function () {\n  var alertaCotizador = document.querySelector('div .exito');\n\n  if (alertaCotizador) {\n    setTimeout(function () {\n      alertaCotizador.remove();\n    }, 3000);\n  }\n})();","\"use strict\";\n\n(function () {\n  var maquinaInput = document.querySelector('#maquina_id');\n\n  if (maquinaInput) {\n    var obtenerMaquinas = function obtenerMaquinas() {\n      var url, respuesta;\n      return regeneratorRuntime.async(function obtenerMaquinas$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"\".concat(location.origin, \"/admin/api/maquinas\");\n              ;\n              _context.next = 4;\n              return regeneratorRuntime.awrap(fetch(url));\n\n            case 4:\n              respuesta = _context.sent;\n              _context.next = 7;\n              return regeneratorRuntime.awrap(respuesta.json());\n\n            case 7:\n              resultado = _context.sent;\n              formatearMaquinas(resultado);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    var formatearMaquinas = function formatearMaquinas() {\n      var arrayMaquinas = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      maquinas = arrayMaquinas.map(function (maquina) {\n        return {\n          nombre: \"\".concat(maquina.nombre.trim()),\n          id: maquina.id\n        };\n      });\n      console.log(maquinas);\n    };\n\n    var buscarMaquinas = function buscarMaquinas(e) {\n      var busqueda = e.target.value;\n\n      if (busqueda.length > 3) {\n        var expresion = new RegExp(busqueda, 'i');\n        maquinasFiltradas = maquinas.filter(function (maquina) {\n          if (maquina.nombre.toLowerCase().search(expresion) != -1) {\n            return maquina;\n          }\n        });\n      } else {\n        maquinasFiltradas = [];\n      }\n\n      mostrarMaquinas();\n    };\n\n    var mostrarMaquinas = function mostrarMaquinas() {\n      while (listadoMaquinas.firstChild) {\n        listadoMaquinas.removeChild(listadoMaquinas.firstChild);\n      }\n\n      if (maquinasFiltradas.length > 0) {\n        maquinasFiltradas.forEach(function (maquina) {\n          var maquinaHTML = document.createElement('LI');\n          maquinaHTML.classList.add('listado-maquinas__maquina');\n          maquinaHTML.textContent = maquina.nombre;\n          maquinaHTML.dataset.id = maquina.id; // anadir al html\n\n          listadoMaquinas.appendChild(maquinaHTML);\n        });\n      } else {\n        var noResultado = document.createElement('P');\n        noResultado.classList.add('listado-maquinas__no-resultado');\n        noResultado.textContent = 'No hay resultados';\n        listadoMaquinas.appendChild(noResultado);\n      }\n    };\n\n    var maquinas = [];\n    var maquinasFiltradas = [];\n    var listadoMaquinas = document.querySelector('#listado-maquinas');\n    obtenerMaquinas();\n    maquinaInput.addEventListener('input', buscarMaquinas);\n  }\n})();","\"use strict\";\n\n(function () {\n  var test = {\n    liner_id: '',\n    pedido_id: '',\n    pedido2_id: '',\n    bobinaInterna_id: '',\n    bobinaIntermedia_id: '',\n    bobinaExterna_id: ''\n  };\n  var copiaTest = [];\n  var copiaBobinas = []; // obtener datos del api de test\n\n  function ApiTest() {\n    var liner_id, url, resultado, apitest;\n    return regeneratorRuntime.async(function ApiTest$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            liner_id = test.liner_id;\n            _context.prev = 1;\n            url = \"\".concat(location.origin, \"/admin/api/test?liner_id=\").concat(liner_id);\n            _context.next = 5;\n            return regeneratorRuntime.awrap(fetch(url));\n\n          case 5:\n            resultado = _context.sent;\n            _context.next = 8;\n            return regeneratorRuntime.awrap(resultado.json());\n\n          case 8:\n            apitest = _context.sent;\n            copiarDatos(apitest);\n            console.log(apitest);\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 13]]);\n  }\n\n  function ApiBobinas() {\n    var bobinaInterna_id, url, resultado, apibobinas;\n    return regeneratorRuntime.async(function ApiBobinas$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            bobinaInterna_id = test.bobinaInterna_id;\n            _context2.prev = 1;\n            url = \"\".concat(location.origin, \"/admin/api/apibobinas?bobinaInterna_id=\").concat(bobinaInterna_id);\n            _context2.next = 5;\n            return regeneratorRuntime.awrap(fetch(url));\n\n          case 5:\n            resultado = _context2.sent;\n            _context2.next = 8;\n            return regeneratorRuntime.awrap(resultado.json());\n\n          case 8:\n            apibobinas = _context2.sent;\n            console.log(apibobinas);\n            copiarDatos(apibobinas);\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(_context2.t0);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 13]]);\n  }\n\n  function copiarDatos(apitest, apibobinas) {\n    copiaTest = apitest;\n    copiaBobinas = apibobinas;\n    console.log(\"copia de test:\".concat(copiaTest));\n    console.log(\"copia de bobinas:\".concat(copiaBobinas));\n  }\n\n  function ApiBobina_externa() {\n    var bobinaExterna_id, url, resultado, apibobinas;\n    return regeneratorRuntime.async(function ApiBobina_externa$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            bobinaExterna_id = test.bobinaExterna_id;\n            _context3.prev = 1;\n            url = \"\".concat(location.origin, \"/admin/api/apibobina_externa?bobinaExterna_id=\").concat(bobinaExterna_id);\n            _context3.next = 5;\n            return regeneratorRuntime.awrap(fetch(url));\n\n          case 5:\n            resultado = _context3.sent;\n            _context3.next = 8;\n            return regeneratorRuntime.awrap(resultado.json());\n\n          case 8:\n            apibobinas = _context3.sent;\n            console.log(apibobinas); // mostrarApibobinas(apibobinas);\n\n            _context3.next = 15;\n            break;\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.log(_context3.t0);\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 12]]);\n  }\n\n  function ApiBobina_media() {\n    var bobinaIntermedia_id, url, resultado, apibobinas;\n    return regeneratorRuntime.async(function ApiBobina_media$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            bobinaIntermedia_id = test.bobinaIntermedia_id;\n            _context4.prev = 1;\n            url = \"\".concat(location.origin, \"/admin/api/apibobina_media?bobinaIntermedia_id=\").concat(bobinaIntermedia_id);\n            _context4.next = 5;\n            return regeneratorRuntime.awrap(fetch(url));\n\n          case 5:\n            resultado = _context4.sent;\n            _context4.next = 8;\n            return regeneratorRuntime.awrap(resultado.json());\n\n          case 8:\n            apibobinas = _context4.sent;\n            console.log(apibobinas); // mostrarApibobinas(apibobinas);\n\n            _context4.next = 15;\n            break;\n\n          case 12:\n            _context4.prev = 12;\n            _context4.t0 = _context4[\"catch\"](1);\n            console.log(_context4.t0);\n\n          case 15:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[1, 12]]);\n  }\n\n  var pedidos = document.querySelector('.pedidos');\n\n  if (pedidos) {\n    var busqueda = function busqueda(e) {\n      // los pedidos no pueden ser iguales\n      if ((e.target.name === 'pedido_id' || e.target.name === 'pedido2_id') && pedido.value === pedido2.value) {\n        pedido2.value = '';\n        Swal.fire(\"Pedido ya seleccionado\", \"No puede seleccionar el mismo pedido\", \"error\");\n        return;\n      } else {\n        test[e.target.name] = e.target.value.trim();\n        console.log(test);\n        ApiBobinas();\n        ApiTest();\n        ApiBobina_externa();\n        ApiBobina_media();\n      }\n    };\n\n    var liner = document.querySelector('[name=\"liner_id\"]');\n    var pedido = document.querySelector('[name=\"pedido_id\"]');\n    var pedido2 = document.querySelector('[name=\"pedido2_id\"]');\n    var bobinaInterna = document.querySelector('[name=\"bobinaInterna_id\"]');\n    var bobinaIntermedia = document.querySelector('[name=\"bobinaIntermedia_id\"]');\n    var bobinaExterna = document.querySelector('[name=\"bobinaExterna_id\"]');\n    liner.addEventListener('change', busqueda);\n    pedido.addEventListener('change', busqueda);\n    pedido2.addEventListener('change', busqueda);\n    bobinaInterna.addEventListener('change', busqueda);\n    bobinaIntermedia.addEventListener('change', busqueda);\n    bobinaExterna.addEventListener('change', busqueda);\n  }\n})();"]}